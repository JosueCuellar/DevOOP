// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecOPP.Server;

#nullable disable

namespace PruebaTecOPP.Server.Migrations
{
    [DbContext(typeof(AplicacionContext))]
    partial class AplicacionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Area", b =>
                {
                    b.Property<Guid>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdArea");

                    b.HasIndex("PaisId");

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Empleado", b =>
                {
                    b.Property<Guid>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SubAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("SubAreaId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Pais", b =>
                {
                    b.Property<Guid>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPais");

                    b.ToTable("Pais", (string)null);
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.SubArea", b =>
                {
                    b.Property<Guid>("IdSubArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreSubArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubArea");

                    b.HasIndex("AreaId");

                    b.ToTable("SubArea", (string)null);
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.TipoDocumento", b =>
                {
                    b.Property<Guid>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Area", b =>
                {
                    b.HasOne("PruebaTecOPP.Server.Models.Pais", "Pais")
                        .WithMany("Areas")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Empleado", b =>
                {
                    b.HasOne("PruebaTecOPP.Server.Models.SubArea", "SubArea")
                        .WithMany("Empleados")
                        .HasForeignKey("SubAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaTecOPP.Server.Models.TipoDocumento", "TipoDocumento")
                        .WithMany("Empleados")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubArea");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.SubArea", b =>
                {
                    b.HasOne("PruebaTecOPP.Server.Models.Area", "Area")
                        .WithMany("SubAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Area", b =>
                {
                    b.Navigation("SubAreas");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.Pais", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.SubArea", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("PruebaTecOPP.Server.Models.TipoDocumento", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
